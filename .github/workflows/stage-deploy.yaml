name: Upgrade staging

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install yc cli
        run: curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash

      - run: echo "/home/runner/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Log in to yc
        run: yc config set token ${{ secrets.YC_TOKEN }} && yc config set cloud-id ${{ secrets.YC_CLOUD_ID }} && yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

      - name: Login to docker container registry
        run: docker login ${{ secrets.DOCKER_IMAGES_REGISTRY }} -u ${{ secrets.DOCKER_PUSHER_USERNAME }} -p ${{ secrets.DOCKER_PUSHER_PASSWORD }}

      - name: Build and push images
        run: ./ci/deploy-image.sh -r "${{ secrets.DOCKER_IMAGES_REGISTRY }}"

      - name: Commit version changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Github Workflow
          author_email: infra@evercodelab.com
          message: 'ci(): bump version [skip actions]'

      - name: Read package.json
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: .
        id: packageJson

      - name: Save kubeconfig credentials
        run: yc managed-kubernetes cluster get-credentials --id ${{ secrets.KUBE_CLUSTER_ID }} --external

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.8.1'

      - name: Deploy new Helm release
        run: helm upgrade landing -n landing-stage ./kubernetes -f ./kubernetes/values.stage.yaml 
          --set image.registry=${{ secrets.DOCKER_IMAGES_REGISTRY }}
          --set image.tag=v"${{ steps.packageJson.outputs.current-version }}"
          --set imagePullSecret.dockerConfigJson=${{ secrets.DOCKER_PULL_SECRET }}
          --set ingress.hosts[0]=${{ secrets.STAGE_HOST }} 
          --set configMap.data.evercodeApiUrl=${{ secrets.EVERCODE_API_URL }}
          --set configMap.data.changeNowApiUrl=${{ secrets.CHANGENOW_API_URL }} 
          --set secret.data.recaptchaSiteKey=${{ secrets.RECAPTCHA_SITE_KEY }}

      - name: Check status
        run: helm status landing -n landing-stage
